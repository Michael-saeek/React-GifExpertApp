{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGif.js","components/Footer.js","GifExpertApp.js","index.js"],"names":["AddCategory","estado","setEstado","useState","value","setValue","className","onSubmit","e","preventDefault","console","log","setTimeout","name","onChange","target","placeholder","GifGridItem","img","map","src","url","alt","id","gettingGif","category","a","categoria","fetch","gifs","json","data","Finalgifs","title","images","downsized_medium","GifGrid","categories","initialState","loading","state","setState","useEffect","then","res","useFetchGif","Footer","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"4LA4DeA,EAzDK,SAAC,GAAwB,EAAvBC,OAAwB,IAAhBC,EAAe,EAAfA,UAAe,EACbC,mBAAS,IADI,mBACjCC,EADiC,KAC1BC,EAD0B,KAqCzC,OACI,mCACI,sBAAMC,UAAU,aAAaC,SAhBhB,SAACC,GAClBA,EAAEC,iBAEFP,EAAU,CAACE,IACXM,QAAQC,IAAIP,GACZQ,YAAW,WACPP,EAAS,MACV,MASC,SACI,uBACAD,MAAOA,EACPS,KAAK,cACLC,SA1Bc,SAACN,GAAO,IACtBJ,EAAUI,EAAEO,OAAZX,MACRC,EAASD,IAyBDY,YAAY,0CC1BbC,EAnBK,SAAC,GAAe,IAAZC,EAAW,EAAXA,IAIpB,OACI,mCACKA,EAAIC,KAAK,SAAAD,GACF,OACI,qBAAkBZ,UAAU,OAA5B,SAEI,qBAAKc,IAAKF,EAAIG,IAAKC,IAAI,MAFjBJ,EAAIK,U,8BCRxBC,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEP,mCACVC,EAAYF,EAHK,SAKJG,MAAM,gDAAD,OAHR,mCAGQ,cAA8DD,EAA9D,wCALD,cAKjBE,EALiB,gBAMAA,EAAKC,OANL,uBAMfC,EANe,EAMfA,KAGFC,EAAYD,EAAKZ,KAAK,SAAAD,GAAQ,IAAD,EAC/B,MAAO,CACHK,GAAIL,EAAIK,GACRU,MAAOf,EAAIe,MACXZ,IAAG,UAAEH,EAAIgB,cAAN,aAAE,EAAYC,iBAAiBd,QAI1CX,QAAQC,IAAI,uBAjBW,kBAmBhBqB,GAnBgB,4CAAH,sDC2BTI,EAxBC,SAAC,GAAkB,IAAD,ECAP,SAACC,GAGxB,IAAMC,EAAe,CACjBP,KAAM,WACNQ,SAAS,GAL0B,EAOXpC,mBAASmC,GAPE,mBAO/BE,EAP+B,KAOxBC,EAPwB,KAyBvC,OAhBAC,qBAAW,WAEPD,EAAS,eAAIH,IAEb1B,YAAY,WAERY,EAAWa,GAAYM,MAAM,SAAAC,GAAG,OAAIH,EAChC,CAACV,KAAMa,EAAKL,SAAS,SAG1B,OAEJ,CAACF,IAIGG,EDvB0BK,CAFH,EAAfpB,UAEFS,EAFiB,EAEtBH,KAAaQ,EAFS,EAETA,QAErB,OAEI,oCAGoB,IAAZA,EAAmB,4CACnB,oBAAIjC,UAAU,iBAAd,SACI,cAAC,EAAD,CAAaY,IAAKgB,SELvBY,EATA,WACX,OACI,wBAAQxC,UAAU,SAAlB,SACI,iFCwBGyC,EAvBM,WAEjB,IAFuB,EAGe5C,mBAAS,CAD1B,KAFE,mBAGfkC,EAHe,KAGHW,EAHG,KAMvB,OACI,uBAAM1C,UAAU,iBAAhB,UAEI,yBAAQA,UAAU,SAAlB,UACI,sDACA,cAAC,EAAD,CAAaL,OAAQoC,EAAYnC,UAAW8C,OAGhD,cAAC,EAAD,CAASvB,SAAUY,IAEnB,cAAC,EAAD,Q,MChBZY,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.af378e0a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\nconst AddCategory = ({estado, setEstado}) => {\r\n    const [ value, setValue ] = useState([])\r\n\r\n    /*\r\n    const handleAddCategories = () => {\r\n        \r\n        if(value === []) {\r\n            alert('No fue enviado ningun valor ')\r\n        } else {\r\n            setEstado([...estado, value])\r\n            setTimeout(() => {\r\n                setValue([])\r\n            }, 100)\r\n        }\r\n    }\r\n    */\r\n\r\n    const handleInputChange = (e) => {\r\n        const { value } = e.target      \r\n        setValue(value)  \r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setEstado([value])\r\n        console.log(value)\r\n        setTimeout(() => {\r\n            setValue([])\r\n        }, 100)\r\n\r\n      \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"Form-input\" onSubmit={handleSubmit}> \r\n                <input \r\n                value={value}\r\n                name=\"addCategory\"\r\n                onChange={handleInputChange}\r\n                placeholder='Ingrese la categoria a agregar !'\r\n                />\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    estado: PropTypes.array,\r\n    setEstado: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( { img } ) => {\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            {img.map( img => {\r\n                    return (\r\n                        <div key={img.id} className='card'>\r\n                        \r\n                            <img src={img.url} alt=\"\"/>\r\n                        </div>   \r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\n\r\n export const gettingGif = async (category) => {\r\n\r\n    const api_key = 'oSVga0lRmj1inekeqmZNjeFMFznGT7IJ'\r\n    const categoria = category\r\n\r\n    const gifs = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${categoria}&limit=12&offset=0&rating=g&lang=en`)\r\n    const { data } = await gifs.json()\r\n\r\n\r\n    const Finalgifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log('corriendo useEffect')\r\n\r\n    return Finalgifs \r\n    \r\n}\r\n","import PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGif(category)\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {\r\n                loading === true ? <h2>Loading...</h2> :\r\n                <ol className=\"container-grid\">\r\n                    <GifGridItem img={images}/>   \r\n                 </ol>\r\n            }   \r\n\r\n        </>  \r\n       \r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.array.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport {gettingGif} from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGif = (categories) => {\r\n\r\n\r\n    const initialState = {\r\n        data: 'cargando',\r\n        loading: true\r\n    }\r\n    const [ state, setState ] = useState(initialState)\r\n\r\n    useEffect( () => {\r\n\r\n        setState({...initialState})\r\n\r\n        setTimeout( () => {\r\n\r\n            gettingGif(categories).then( res => setState (\r\n                {data: res, loading: false}\r\n            ))\r\n    \r\n        }, 2000)\r\n\r\n    }, [categories])\r\n\r\n \r\n\r\n    return state;\r\n\r\n}\r\n\r\n","\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\"> \r\n            <p>Developed by - Michael Andrade from Venezuela</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\nimport Footer from './components/Footer'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const initialState = ''\r\n    const [ categories, setCategories ] = useState([initialState])\r\n\r\n\r\n    return (\r\n        <main className=\"container-main\">\r\n       \r\n            <header className=\"header\">\r\n                <h2>App Consuming Giphy </h2>\r\n                <AddCategory estado={categories} setEstado={setCategories}/>\r\n            </header>\r\n      \r\n            <GifGrid category={categories} /> \r\n       \r\n            <Footer />\r\n       \r\n        </main>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}